export component Circle {
    in property <length> radius;
    in property <{x: length, y: length}> center-pos;
    in property <brush> color;

    property <length> diameter: radius * 2;

    x: center-pos.x - radius;
    y: center-pos.y - radius;

    height: diameter;
    width: diameter;

    Rectangle {
        border-radius: radius;
        background: color;
    }
}

export enum PieceColor {
    White,
    Black,
}

export struct PieceData {
    is-active: bool,
    color: PieceColor,
    is-king: bool,
}

export component Piece {
    in property <PieceData> data;
    in property <length> radius;
    in property <{x: length, y: length}> pos;

    x: pos.x - radius;
    y: pos.y - radius;

    width: radius * 2;
    height: radius * 2;

    if data.is-active && data.is-king: Circle {
        center-pos: { x: radius, y: radius };
        radius: radius * 107.5%;
        color: crimson;
    }

    if data.is-active: Circle {
        center-pos: { x: radius, y: radius };
        radius: radius;
        color: data.color == PieceColor.White ? white : black;
    }
}
